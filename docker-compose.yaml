version: "3.9"

services:
    project:
        build:
            context: .
            dockerfile: Dockerfile
        restart: unless-stopped
        command: poetry run yimba service run project
        volumes:
            - ./src/services/routers/project/:/app/src/services/routers/project
        depends_on:
            - mongo
        ports:
            - "8091:${API_PORT}"
        env_file:
            - ./dotenv/dev.env

    facebook:
        build:
            context: .
            dockerfile: Dockerfile
        restart: unless-stopped
        command: poetry run yimba service run facebook
        environment:
            LOG_LEVEL: ${BASE_LOG_LEVEL}
            ENV: ${APP_ENV}
        volumes:
            - ./src/services/routers/facebook/:/app/src/services/routers/facebook
        depends_on:
            - mongo
        ports:
            - "8092:${API_PORT}"
        env_file:
            - ./dotenv/dev.env

    tiktok:
        build:
            context: .
            dockerfile: Dockerfile
        restart: unless-stopped
        command: poetry run yimba service run tiktok
        volumes:
            - ./src/services/routers/tiktok/:/app/src/services/routers/tiktok
        depends_on:
            - mongo
        ports:
            - "8093:${API_PORT}"
        env_file:
            - ./dotenv/dev.env

    twitter:
        build:
            context: .
            dockerfile: Dockerfile
        restart: unless-stopped
        command: poetry run yimba service run twitter
        volumes:
            - ./src/services/routers/twitter/:/app/src/services/routers/twitter
        depends_on:
            - mongo
        ports:
            - "8094:${API_PORT}"
        env_file:
            - ./dotenv/dev.env

    instagram:
        build:
            context: .
            dockerfile: Dockerfile
        restart: unless-stopped
        command: poetry run yimba service run instagram
        volumes:
            - ./src/services/routers/instagram/:/app/src/services/routers/instagram
        depends_on:
            - mongo
        ports:
            - "8095:${API_PORT}"
        env_file:
            - ./dotenv/dev.env

    google:
        build:
            context: .
            dockerfile: Dockerfile
        restart: unless-stopped
        command: poetry run yimba service run google
        volumes:
            - ./src/services/routers/google/:/app/src/services/routers/google
        depends_on:
            - mongo
        ports:
            - "8096:${API_PORT}"
        env_file:
            - ./dotenv/dev.env

    youtube:
        build:
            context: .
            dockerfile: Dockerfile
        restart: unless-stopped
        command: poetry run yimba service run youtube
        volumes:
            - ./src/services/routers/youtube/:/app/src/services/routers/youtube
        depends_on:
            - mongo
        ports:
            - "8097:${API_PORT}"
        env_file:
            - ./dotenv/dev.env

    analyse:
        build:
            context: .
            dockerfile: Dockerfile
        restart: unless-stopped
        command: poetry run yimba service run analyse
        volumes:
            - ./src/services/routers/analyse/:/app/src/services/routers/analyse
        depends_on:
            - mongo
        ports:
            - "8098:${API_PORT}"
        env_file:
            - ./dotenv/dev.env

    cloudtags:
        build:
            context: .
            dockerfile: Dockerfile
        restart: unless-stopped
        command: poetry run yimba service run cloudtags
        volumes:
            - ./src/services/routers/cloudtags/:/app/src/services/routers/cloudtags
        depends_on:
            - mongo
        ports:
            - "8100:${API_PORT}"
        env_file:
            - ./dotenv/dev.env

    rapport:
        build:
            context: .
            dockerfile: Dockerfile
        restart: unless-stopped
        command: poetry run yimba service run rapport
        volumes:
            - ./src/services/routers/rapport/:/app/src/services/routers/rapport
        depends_on:
            - mongo
        ports:
            - "8101:${API_PORT}"
        env_file:
            - ./dotenv/dev.env

    mongo:
        image: mongo:jammy
        restart: unless-stopped
        environment:
            MONGO_DB: "${MONGO_DB}"
            MONGO_USER: "${MONGO_USER}"
            MONGO_PASSWORD: "${MONGO_PASSWORD}"
            MONGO_INITDB_ROOT_USERNAME: "${MONGO_USER}"
            MONGO_INITDB_ROOT_PASSWORD: "${MONGO_PASSWORD}"
        ports:
          - "27022:${MONGO_PORT}"
        volumes:
            - yimba_apifydb_data:/data/db

volumes:
    yimba_apifydb_data: {}
